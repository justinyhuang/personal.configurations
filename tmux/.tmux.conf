# status bar
set-option -g status on
set -g status-interval 1

set -g default-shell /bin/zsh

set-option -g pane-border-status top
set-option -g pane-border-format "#P"
set-option -g display-panes-time 4000

# to use powerline
set -g status-justify left #centre # center align window list
set -g status-left-length 90
set -g status-right-length 180
set -g status-left ""
#set -g status-left "#(~/.tmux/powerline/powerline.sh left)"
set -g status-right "#(~/.tmux/powerline/powerline.sh right)"
#set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#the line below shows on the left status: the session name and the current window name
set -g status-left '#{s/root//:client_key_table}#[fg=colour0,bg=colour208] #S #[fg=colour255, bg=colour27] #W '
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
#set-option -g status-bg colour235 #base02
set -g status-bg default
set-option -g status-fg colour136 #yellow

#set the window list
#set-window-option -g window-status-current-format "#[fg=colour255, bg=colour27] #I #W "
#below two lines disable the window list
set-window-option -g window-status-current-format ""
set-window-option -g window-status-format ""

set-option -g display-time 3000
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


# C-b is not acceptable -- Vim uses it
#set-option -g prefix C-a
set -g prefix `
bind-key ` send-prefix

bind -n C-h select-pane -L
bind -n C-l select-pane -R
bind -n C-j select-pane -D
bind -n C-k select-pane -U

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Highlight active window
#set-window-option -g window-status-current-bg red

# Vi copypaste mode
# workflow for copying in the copy mode:
#   ` + Escape      - enter copy mode
#   move to the portion you like to copy
#   v               - to activate highlighting
#   move to select what to copy
#   y               - to copy the text
#   ` + p           - paste the text
set-window-option -g mode-keys vi
#unbind PPage
bind Escape copy-mode
#bind PPage copy-mode
unbind p
bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# toggle mouse mode
bind m \
         set -g mouse on\;\
         display 'Mouse: ON'

bind k \
         set -g mouse off\;\
         display 'Mouse: OFF'

# color
set -g default-terminal "screen-256color"


bind-key Z switch-client -T RESIZE

bind-key -T RESIZE k resize-pane -U \; switch-client -T RESIZE
bind-key -T RESIZE j resize-pane -D \; switch-client -T RESIZE
bind-key -T RESIZE h resize-pane -L \; switch-client -T RESIZE
bind-key -T RESIZE l resize-pane -R \; switch-client -T RESIZE

bind-key -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE
bind-key -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE
bind-key -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE
bind-key -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE

# history limit
set-option -g history-limit 5000

#set inactive/active window styles
#set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

set -g focus-events on

run-shell ~/.tmux/plugins/sessionist/sessionist.tmux
run-shell ~/.tmux/plugins/tmux-resurrect-master/resurrect.tmux
run-shell ~/.tmux/plugins/tmux-yank-master/yank.tmux
#run-shell ~/.tmux/plugins/tmux-copycat-master/copycat.tmux

# as ` becomes the trigger for tmux commands,
# remap the bindings below to achieve a better left-right hand balance
# use e and n for selecting trees and windows
#bind e choose-window
bind n run -b ftwind
#bind n run-shell /home/huanyang/.tmux/plugins/sessionist/scripts/goto_session.sh
# use ' and " for dividing the plane vertically and horizontally
#bind-key '"' split-window -c "#{pane_current_path}"
#bind-key "'" split-window -h -c "#{pane_current_path}"
bind-key "'" run-shell ~/.tmux/split-window-h-ssh
bind-key '"' run-shell ~/.tmux/split-window-ssh
bind-key c run-shell ~/.tmux/new-window-ssh
bind-key , command-prompt -I "#W" "rename-window '%%'"

#to show a memo for current window
bind-key o run-shell ~/.tmux/show-memo
bind-key e run-shell ~/.tmux/edit-memo

#to support switching panes when in copy mode
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

#bind o switch-client -n
unbind Space

#for extrakto
run-shell ~/.tmux/plugins/extrakto/extrakto.tmux
set -g @extrakto_split_size "15"
set -g @extrakto_fzf_tool "/home/huanyang/.fzf/bin/fzf"
set -g @extracto_key i
